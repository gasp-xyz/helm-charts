# Default values for mangata-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
environment: local
domainZone: mangata.online
remoteCluster: false
enableWsIngress: true
ingressClassName: nginx
storageClass: standard-rwo
command: /mangata/node
nodeNameOverride: ''

## Additional args to use
extraArgs: []
env:
  RUST_LOG: "info"

nameOverride: ''

image:
  repository: mangatasolutions/mangata-node
  pullPolicy: IfNotPresent
  ## Overrides the image tag whose default is the chart appVersion.
  tag: develop

isCollator: true
# Role gets assigned to resources as a label
role: full
enableStartupProbe: true
storageSize: 10Gi
## Example: `bootnodeAddr: /dns4/node-01/tcp/30333/p2p/12D3KooWSCufgHzV4fCwRijfH2k3abrpAJxTKxEvN1FDuRXA2U9x`
bootnodeAddr: ''
forceDownloadChainspec: true
chain: public-testnet
allowUnsafeRpcMethods: true
telemetryUrls: []
customChainspecPath: "/chain-data/chainspec.json"
## When defined, chainspec will be downloaded from the URL.
## By default `chain` variable value is passed to node's `--chain` parameter.
# customChainspecUrl:

chainData:
  snapshotFormat: lz4
  ## Configuration to download chain snapshot from remote URL
  ##
  # snapshotUrl: "https://dot-rocksdb.polkashots.io/snapshot"
  # chainPath: ""
    # -- (string) If set, create a clone of the volume (using volumeClaimTemplates.dataSource.VolumeSnapshot) and use it to store chain data
  # kubernetesVolumeSnapshot:
  # -- (string) If set, create a clone of the volume (using volumeClaimTemplates.dataSource.PersistentVolumeClaim) and use it to store chain data
  # kubernetesVolumeToClone:

## If configured, will assing custom node key for node instead of using
## generated one that is created and persisted on first run of the node
##
# customNodeKey:
# relaychainCustomNodeKey:
# accountKeys:
# - type: aura
#   scheme: sr25519
#   seed: //Alice
keystoreMountInMemoryEnabled: true
keystoreMountInMemorySizeLimit: 10Mi
keystoreStorageSize: 10Gi

enableServiceMonitorCollectors: false

parachainRegisterSidecar:
  enable: false
  image: mangatasolutions/parachain-register:1.1
  relaychainHostAddr: ws://relaychain-alice:9944
  parachainId: 2110
  command: []

relaychain:
  image: "parity/polkadot:v0.9.37"
  chain: rococo-local
  # bootnodeAddr: /dns/relaychain-alice/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
  storageSize: 10Gi
  ## When defined, chainspec will be downloaded from the URL.
  ## By default it is autogenerated using `rococo-local` chain configuration.
  # customChainspecUrl:
  chainspecPath: "/relaychain-data/relay_chain_chainspec.json"
  forceGenerateChainspec: false
  forceUseCustomChainspecPath: false
  chainData:
    snapshotFormat: lz4
    ## Configuration to download chain snapshot from remote URL
    ##
    # snapshotUrl: "https://dot-rocksdb.polkashots.io/snapshot"
    # chainPath: ""
    ## Specify this variable if there is an existing VolumeSnapshot in the SAME namespace
    ## to copy relaychaindata from.
    # -- (string) If set, create a clone of the volume (using volumeClaimTemplates.dataSource.VolumeSnapshot) and use it to store chain data
    # kubernetesVolumeSnapshot:
    # -- (string) If set, create a clone of the volume (using volumeClaimTemplates.dataSource.PersistentVolumeClaim) and use it to store chain data
    # kubernetesVolumeToClone:
  extraArgs: []

resources:
  requests:
    cpu: 200m
    memory: 1Gi
  limits:
    cpu: 1000m
    memory: 2Gi

# -- Define which Nodes the Pods are scheduled on
nodeSelector: {}
# -- Grace termination period of the Pod
terminationGracePeriodSeconds: 60
# -- Tolerations for use with node taints
tolerations: []
# -- Assign custom affinity rules
affinity: {}

initContainer:
  image:
    repository: paritytech/lz4
    tag: latest
  debug: false

podAnnotations: 
  'fluentbit.io/parser': 'substrate'

# -- Configuration of the WS Health exporter.
# ref: https://github.com/paritytech/scripts/tree/master/dockerfiles/ws-health-exporter
wsHealthExporter:
  enabled: false
  image: paritytech/ws-health-exporter:0a2e6e9b-20230412
  # -- Resource limits & requests
  resources: {}
  # -- Environment variables to set on the API sidecar
  env: {}
  # -- Enable Node readiness probe through `paritytech/ws-health-exporter` running as a sidecar container
  enableSidecarReadinessProbe: false
  # -- Enable Node liveness probe through `paritytech/ws-health-exporter` running as a sidecar container
  enableSidecarLivenessProbe: false

# -- Configuration of Substrate API sidecar container
# ref: https://github.com/paritytech/substrate-api-sidecar
substrateApiSidecar:
  # -- Enable Substrate API sidecar container
  enabled: false
  image:
    # -- Image repository
    repository: parity/substrate-api-sidecar
    # -- Image tag
    tag: latest
  metrics:
    enabled: false
    port: 9100
  # -- Arguments to set on the API sidecar
  args:
    - "node"
    - "build/src/main.js"
  # -- Environment variables to set on the API sidecar
  env: {}
  # -- Resource limits & requests
  resources: {}

# -- Additional containers to run in the pod
extraContainers: []

# -- Additional init containers to run in the pod
extraInitContainers: []